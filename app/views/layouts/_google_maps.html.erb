<div id="map"></div>

<script>
   var types = ["amusement_park", "aquarium","art_gallery","bakery","bar","bicycle_store",
          "book_store", "bowling_alley","cafe", "church", "food", "florist", "meal_delivery",
          "library", "meal_takeaway", "museum", "park", "restuarant","shopping_mall",
          "locality"]
          
    var excluded_types = ["lodging", "accounting", "airport", "bank", "beauty_salon", 
    "bus_station", "car_dealer", "car_repair", "car_wash", "convenience_store",
    "dentist", "department_store", "doctor", "electrician", "electronics_store",
    "embassy","fire_station","funeral_home","furniture_store","gas_station","gym",
    "hardware_store", "home_goods_store","hospital","insurance_agency","laundry",
    "Lawyer","lawyer","locksmith","moving_company","painter","parking","pet_store","pharmacy",
    "plumber","physiotherapist","post_office","real_estate_agency","roofing_contractor",
    "school","storage","taxi_stand","veterinary_care","general_contractor","health","police"]
    
    var excluded_names = ["Tanunda Treatment Plant", "Seppelts View Cabins","Burge Vineyard Services",
    "Lyndoch Valley Family Centre", "Bardell Excavations","GRAETZ Irrigation","A&G Engineering PTY LTD",
    "Lyndoch Motors (Angaston Branch)", "Stainless Engineering & Maintenance PTY LTD (SEAM)",
    "Girl Guides SA Barossa Valley","Girl Guides SA Barossa Valley","Tanunda Lutheran Home Inc.","Nitschke Chaff And Freight",
    "Angaston Power Station","With Love and Lace Melanie","With Love and Lace Melanie","Barossa Valley Secretarial Services",
    "Barossa Data Recovery","Scott Goldsmith Photography","U-Haul Trailer Hire","Pampered Pets Salon Greenock","CCL Label","Coates Hire",
    "Ink Obsession","Burge Vineyard Services","Barossa Out of School Hours Care","Kylie Heath - Remedial Massage Therapist","Browns & Associates Drafting Services",
    "WFI","AP John & Sons","Tanunda Newsagency","Tanunda Cricket Club"]
    
    var info_windows = [];
    var map;
    var key_locations = [];
    var markers = [];
    var service = null;
    
    function initMap() 
    {
        var map_center    = {lat: -34.481251, lng: 138.938603};        
        var carob_cottage = {lat: -34.478891, lng: 138.939503};
        
        var home_icon = 
        {
          url: "assets/map_icons/home_icon.png", // url
          scaledSize: new google.maps.Size(50, 75), // scaled size
          origin:     new google.maps.Point(0, 0), // origin
          anchor:     new google.maps.Point(25, 75) // anchor
        };
        
        var myStyles =[
            {
                featureType: "poi",
                elementType: "labels"
            }
        ];
        
        map = new google.maps.Map(document.getElementById('map'), 
        {
            zoom:   15, 
            center: map_center,
            styles: myStyles
        });
        
        contentString = '<h4 id="firstHeading" class="firstHeading">Carob Cottage</h4>'
        contentString +=    '<p>' + "145 Nitschke Road Marananga" + '</p>'
        var infowindow = new google.maps.InfoWindow({
          content: contentString
        });
        info_windows.push(infowindow)
        
        var home_marker = new google.maps.Marker({
            position: new google.maps.LatLng(carob_cottage["lat"], carob_cottage["lng"]),
            icon: home_icon,
            map: map
          })
        home_marker.addListener('click', function() {
          close_infowindows();
          infowindow.open(map, home_marker);
        });            

        infowindow.open(map, home_marker);
        service = new google.maps.places.PlacesService(map);
        getNearbyPlaces(carob_cottage, 2500);
    }
    
    function getNearbyPlaces(location, radius)
    {
        service.nearbySearch({
          location: location,
          radius: radius
        }, callback);
    }
    
    function callback(results, status, pagination) 
    {
        var town_icon = 
        {
          url: "<%= asset_path('map_icons/town_icon.png') %>",
          scaledSize: new google.maps.Size(40, 60), // scaled size
          origin: new google.maps.Point(0, 0), // origin
          anchor: new google.maps.Point(20, 60) // anchor
        };

        var food_icon = 
        {
          url: "<%= asset_path('map_icons/food_icon.png') %>",
          scaledSize: new google.maps.Size(20, 30), // scaled size
          origin: new google.maps.Point   (0,  0), // origin
          anchor: new google.maps.Point   (10, 30) // anchor
        };  
        
        var wine_icon = 
        {
          url: "<%= asset_path('map_icons/wine_icon.png') %>",
          scaledSize: new google.maps.Size(20, 30),
          origin: new google.maps.Point   (0,  0), 
          anchor: new google.maps.Point   (10, 30)
        };
      
        if (status === google.maps.places.PlacesServiceStatus.OK)
        {
            for (var i = 0; i < results.length; i++)
            {
              excluded = false        
              for(var j = 0; j < results[i].types.length; j++)
              {
                if(excluded_types.includes(results[i].types[j]) || excluded_names.includes(results[i].name))
                {
                  excluded = true 
                  break;
                }
              }
              if(!excluded)
              {
                var icon = "";
                if (results[i].types.includes("locality")) icon = town_icon;
                if (results[i].types.includes("food"))     icon = food_icon;
                if (results[i].name.includes("Wine") || results[i].name.includes("wine")) icon = wine_icon;
                if (results[i].types.includes("bar"))      icon = wine_icon;
                createMarker(results[i], icon);
              }
            }

            getNextPage = pagination.hasNextPage && function() { pagination.nextPage(); };
            if (getNextPage) getNextPage();
        }
    }
    
    function close_infowindows()
    {
      for(var i = 0; i < info_windows.length; i++)
        info_windows[i].close();
    }
    
    function getDetails(place, callback)
    {
        var request = { placeId: place["place_id"] };
        service.getDetails(request, function(result, status) 
        {
          callback(result)
        });
    }
    
    function createMarker(place, icon) 
    {
      if (place.geometry.location != null)
      {
        var marker = new google.maps.Marker({
          map: map,
          icon: icon,
          position: place.geometry.location,
          animation: google.maps.Animation.DROP
        });
    
        marker.addListener('click', function() 
        {
          getDetails(place, function(place_info)
          {
            contentString = '<h6 class="firstHeading">' + place_info["name"] + '</h6>'
            console.log(place_info)
            place_website = place_info["website"]
            if(place_info["adr_address"] != null)
              contentString += place_info["adr_address"]
            if(place_website != null)
              contentString += "<br><a href='" + place_website + "' target='_blank'>" + place_website + "<a/>"
            var infowindow = new google.maps.InfoWindow({
              content: contentString
            });
            info_windows.push(infowindow);
            close_infowindows();
            infowindow.open(map, marker);
          });

        });
      }
    }
</script>
